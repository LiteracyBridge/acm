
// External dependencies for the build script. (Gradle, WTF...)
buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.2.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

project(':core') {          
    buildDir = 'android_build'
}

allprojects {
    apply plugin: 'idea'

    repositories {
        google()
        mavenCentral()
        maven {
            url "https://bits.netbeans.org/maven2"
        }
        maven {
            url "https://essi-lab.eu/nexus/content/groups/open.repos"
        }
    }
}



apply plugin: 'com.android.application'

// Load Google Play Store signing properties
def keystorePropertiesFile = rootProject.file("../../acm/androidTBLoader/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    // Load versionCode from version.properties file.
    Properties versionProps = new Properties()
    def versionPropsFile = file('version.properties')
    if(versionPropsFile.exists())
        versionProps.load(new FileInputStream(versionPropsFile))
    def code = (versionProps['versionCode'] ?: "0").toInteger()

    // If this is a release build (ie, will be signed for the play store), increment versionCode, and save.
    def runTasks = gradle.startParameter.taskNames
    for (String item : runTasks) {
        if (item.contains("assembleRelease")) {
            code = code + 1
            versionProps['versionCode'] = code.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        }
    }

    signingConfigs {
        Release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
//    compileSdkVersion 33
    compileSdk 33
    defaultConfig {
        applicationId "org.literacybridge.androidtbloader"
        minSdkVersion 25
        targetSdkVersion 33
        versionCode code
        versionName "1.1.0 (${code})"
        buildConfigField "long", "TIMESTAMP", System.currentTimeMillis() + "L"    }
    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.Release
        }
    }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    namespace 'org.literacybridge.androidtbloader'
    lint {
        abortOnError false
    }

}

clean.doLast  {
    delete rootProject.buildDir
    delete project(':core').buildDir
}

dependencies {
    implementation project(':core')
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // These version numbers are lifted from a sample on the android site.
    // If you find docs on a better way to pick the versions, put a link
    // to the URL here.
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation files('libs/json_simple-1.1.jar')
    implementation 'com.amazonaws:aws-android-sdk-s3:2.2.22'
    implementation 'com.amazonaws:aws-android-sdk-cognitoidentityprovider:2.3.2'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'

    implementation 'com.android.volley:volley:1.2.1'
    testImplementation 'junit:junit:4.13.2'
}
